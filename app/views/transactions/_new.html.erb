<!-- Redeem Modal Form -->

<div class="modal-dialog">
  <div class="modal-content">
    <div class="modal-header">
      <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
      <h4 class="modal-title">Redeem Amount</h4>
    </div>
    <div class="modal-body">
      <%= form_for(@transaction, html: {method: :post}, remote: true) do |f|  %>

        <div id="error_explanation"></div>

<!-- Populate Data -->
<div class="row">
<div class="col-sm-12">
<h3 id="expired_card" style="  
text-align: left;
  margin-top: 0;
  border: 1px solid #E41C39;
  padding: 10px;
  color: #E41C39;
  font-size: 18px;"></h3>
      <script>
   var exp_date  =    '<%= @gift_card.formatted_expiry %>';
    var today = new Date();
var dd = today.getDate();
var mm = today.getMonth()+1; //January is 0!

var yyyy = today.getFullYear();
if(dd<10){
    dd='0'+dd;
} 
if(mm<10){
    mm='0'+mm;
} 
var today = dd+'/'+mm+'/'+yyyy;
if (exp_date < today) {
  document.getElementById("expired_card").innerHTML = "Card has expired";
}
    </script>
</div>
  <div class="col-sm-6">
    <div class="form-group">
      <%= label_tag(:card_number, "Gift Card Number") %>
      <%= text_field_tag(:card_number, '', class: 'form-control', disabled: true, value: @gift_card.card_number) %>
    </div>
  </div>
  <div class="col-sm-6">
    <div class="form-group">
      <%= label_tag(:expiry, "Expiration Date") %>
      <%= text_field_tag(:expiry, '', class: 'form-control', disabled: true, value: @gift_card.formatted_expiry) %>
    </div>


  </div>
</div>

<div class="row">
  <div class="col-sm-6">
    <div class="form-group">
      <% unless current_user.is_admin? %>
        <%= label_tag(:store_code, "Store Code") %>
        <%= text_field_tag(:store_code, '', class: 'form-control', disabled: true, value: current_user.store_code) %>
      <% else %>
        <%= label_tag(:store_code, "Store Code") %><span class="required-field">*</span>
        <%= text_field_tag(:store_code, '', class: 'form-control', required: true) %>
      <% end %>
    </div>
  </div>
  <div class="col-sm-6">
    <div class="form-group">
      <%= label_tag(:balance, "Gift Card Balance") %>
      <%= text_field_tag(:balance, '', class: 'form-control', disabled: true, value: @gift_card.balance) %>
      <%= f.hidden_field :gift_card_id, value: @gift_card.id %>
    </div>
  </div>
</div>

<div class="row">
  <div class="col-sm-6">
    <div class="form-group">
      <%= label_tag(:invoice_number, "Invoice Number") %> <span class="required-field">*</span>
      <%= f.text_field :invoice_number, :autofocus => true, class: 'form-control', required: 'true' %>
    </div>
  </div>
  <div class="col-sm-6">
    <div class="form-group">
        <%= label_tag(:redeemed_value, "Amount") %> <span class="required-field">*</span>
      <%= f.text_field :redeemed_value, class: 'form-control', required: 'true' %>
    </div>
  </div>
</div>
    <div class="modal-footer">
      <%= f.submit "Submit", class: "btn btn-success" %>
      <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
    </div>

  </div><!-- / Modal Body -->
    <% end %>
  </div>
</div>

<script>
  $('#transaction_invoice_number').attr('onkeypress', 'return event.charCode >= 48 && event.charCode <= 57');
    $('#transaction_redeemed_value').attr('onkeypress', 'return event.charCode >= 48 && event.charCode <= 57');
</script>

<script>
(function (exports) {
  function valOrFunction(val, ctx, args) {
      if (typeof val == "function") {
          return val.apply(ctx, args);
      } else {
          return val;
      }
  }

  function InvalidInputHelper(input, options) {
      input.setCustomValidity(valOrFunction(options.defaultText, window, [input]));

      function changeOrInput() {
          if (input.value == "") {
              input.setCustomValidity(valOrFunction(options.emptyText, window, [input]));
          } else {
              input.setCustomValidity("");
          }
      }

      function invalid() {
          if (input.value == "") {
              input.setCustomValidity(valOrFunction(options.emptyText, window, [input]));
          } else {
             input.setCustomValidity(valOrFunction(options.invalidText, window, [input]));
          }
      }

      input.addEventListener("change", changeOrInput);
      input.addEventListener("input", changeOrInput);
      input.addEventListener("invalid", invalid);
  }
  exports.InvalidInputHelper = InvalidInputHelper;
})(window);



InvalidInputHelper(document.getElementById("transaction_invoice_number"), {
  defaultText: "Please enter Invoice Number",
  emptyText: "Please enter Invoice Number",
  invalidText: function (input) {
      return 'Invalid Invoice number';
  }
});

InvalidInputHelper(document.getElementById("transaction_redeemed_value"), {
  defaultText: "Please enter Amount",
  emptyText: "Please enter Amount",
  invalidText: function (input) {
      return 'Invalid Amount';
  }
});


</script>
