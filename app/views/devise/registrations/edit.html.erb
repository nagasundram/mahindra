<!-- Edit Account Template -->
<div class="container">
  <div class="row">
    <div class="col-sm-12">
      <h3>Change Password</h3>
      <%= form_for(resource, :as => resource_name, :url => registration_path(resource_name), :html => { :method => :put, :role => 'form'}) do |f| %>
<div class="flash-messages">
        <%= devise_error_messages! %>
      </div>
    </div>
  </div>
<fieldset class="well">
  <div class="row">
    <div class="col-sm-6">
      <div class="form-group">
        <%= f.label :name %>
        <%= f.text_field :name, disabled: true, class: 'form-control' %>
      </div>
    </div>
    <div class="col-sm-6">
      <div class="form-group">
        <%= f.label :email %>
        <%= f.email_field :email, disabled: true, class: 'form-control' %>
      </div>
    </div>
  </div>
</fieldset>
      <fieldset class="well1">
        <div class="row">
          <div class="col-sm-4">
            <div class="form-group">
              <%= f.label :current_password %>
              <%= f.password_field :current_password, class: 'form-control', required: 'true' %>
            </div>
          </div>
          <div class="col-sm-4">
            <div class="form-group">
              <%= f.label "New Password" %>
              <%= f.password_field :password, autofocus: true, :autocomplete => 'off', class: 'form-control', required: 'true' %>
            </div>
          </div>
          <div class="col-sm-4">
            <div class="form-group">
              <%= f.label "Confirm New Password" %>
              <%= f.password_field :password_confirmation, class: 'form-control', required: 'true' %>
            </div>
          </div>
        </div>
      </fieldset>
      <div class="row">
        <div class="col-sm-12 authform marg-btn">
          <%= f.submit 'Change Password', :class => 'button' %>
        <% end %>
        </div>
      </div>
</div>





<script>
   $('.flash-messages').addClass('animated slideInDown');

      setTimeout(function(){
         $(".flash-messages").addClass("animated slideOutUp");
     }, 3000);
</script>


<script>
(function (exports) {
  function valOrFunction(val, ctx, args) {
      if (typeof val == "function") {
          return val.apply(ctx, args);
      } else {
          return val;
      }
  }

  function InvalidInputHelper(input, options) {
      input.setCustomValidity(valOrFunction(options.defaultText, window, [input]));

      function changeOrInput() {
          if (input.value == "") {
              input.setCustomValidity(valOrFunction(options.emptyText, window, [input]));
          } else {
              input.setCustomValidity("");
          }
      }

      function invalid() {
          if (input.value == "") {
              input.setCustomValidity(valOrFunction(options.emptyText, window, [input]));
          } else {
             input.setCustomValidity(valOrFunction(options.invalidText, window, [input]));
          }
      }

      input.addEventListener("change", changeOrInput);
      input.addEventListener("input", changeOrInput);
      input.addEventListener("invalid", invalid);
  }
  exports.InvalidInputHelper = InvalidInputHelper;
})(window);



InvalidInputHelper(document.getElementById("user_current_password"), {
  defaultText: "Enter your current password",
  emptyText: "Enter your current password",
});

InvalidInputHelper(document.getElementById("user_password"), {
  defaultText: "Enter your new password",
  emptyText: "Enter your new password",
});

InvalidInputHelper(document.getElementById("user_password_confirmation"), {
  defaultText: "Re-enter your new password",
  emptyText: "Re-enter your new password",
});

var password = document.getElementById("user_password")
  , confirm_password = document.getElementById("user_password_confirmation");

function validatePassword(){
  if(password.value != confirm_password.value) {
    confirm_password.setCustomValidity("Passwords Don't Match");
  } else {
    confirm_password.setCustomValidity('');
  }
}

user_password.onchange = validatePassword;
user_password_confirmation.onkeyup = validatePassword;


</script>
