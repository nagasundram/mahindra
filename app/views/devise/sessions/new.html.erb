<div class="authform-outer">
  <div class="authform">
    <%= form_for(resource, :as => resource_name, :url => session_path(resource_name), :html => { :role => 'form'}) do |f| %>
    <img src="<%= asset_path "logo.png" %>" alt="" class="login-form-logo img-responsive">
      <%= devise_error_messages! %>
      <div class="form-group">
        <!-- <%= f.label :email %> -->
        <%= f.email_field :email, :autofocus => true, class: 'form-control', placeholder: 'Email', required: 'true' %>
      </div>
      <div class="form-group">
        <%= f.password_field :password, class: 'form-control', placeholder: 'Password', required: 'true' %>
      </div>
      <div class="center">
          <%= f.submit 'Login', :class => 'button' %>

        <div class="forgot-password">
          <%- if devise_mapping.recoverable? %>
            <%= link_to "Forgot password?", new_password_path(resource_name), class: '' %>
          <% end -%>
        </div>
      </div>
    <% end %>
  </div>
</div>
<script>
  $(".authform-outer").backstretch("<%= asset_path "login-bg.jpg" %>");
</script>

<script>
(function (exports) {
  function valOrFunction(val, ctx, args) {
      if (typeof val == "function") {
          return val.apply(ctx, args);
      } else {
          return val;
      }
  }

  function InvalidInputHelper(input, options) {
      input.setCustomValidity(valOrFunction(options.defaultText, window, [input]));

      function changeOrInput() {
          if (input.value == "") {
              input.setCustomValidity(valOrFunction(options.emptyText, window, [input]));
          } else {
              input.setCustomValidity("");
          }
      }

      function invalid() {
          if (input.value == "") {
              input.setCustomValidity(valOrFunction(options.emptyText, window, [input]));
          } else {
             input.setCustomValidity(valOrFunction(options.invalidText, window, [input]));
          }
      }

      input.addEventListener("change", changeOrInput);
      input.addEventListener("input", changeOrInput);
      input.addEventListener("invalid", invalid);
  }
  exports.InvalidInputHelper = InvalidInputHelper;
})(window);


InvalidInputHelper(document.getElementById("user_email"), {
  defaultText: "Please enter your email id",
  emptyText: "Please enter you email id",
  // invalidText: function (input) {
  //     return 'Email is invalid!';
  // }
});

InvalidInputHelper(document.getElementById("user_password"), {
  defaultText: "Please enter your password",
  emptyText: "Please enter your password",
  invalidText: function (input) {
      return 'Password is invalid!';
  }
});



</script>
